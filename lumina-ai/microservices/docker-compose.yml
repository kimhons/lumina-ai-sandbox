version: '3'

services:
  # Core Services
  provider-service:
    build:
      context: ./provider-service
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka/
    depends_on:
      - discovery-service
      - config-service
    volumes:
      - ./provider-service:/app
    networks:
      - lumina-network

  memory-service:
    build:
      context: ./memory-service
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka/
    depends_on:
      - discovery-service
      - config-service
    volumes:
      - ./memory-service:/app
    networks:
      - lumina-network

  security-service:
    build:
      context: ./security-service
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka/
    depends_on:
      - discovery-service
      - config-service
    volumes:
      - ./security-service:/app
    networks:
      - lumina-network

  ui-service:
    build:
      context: ./ui-service
      dockerfile: Dockerfile
    ports:
      - "8004:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka/
    depends_on:
      - discovery-service
      - config-service
    volumes:
      - ./ui-service:/app
    networks:
      - lumina-network

  tool-service:
    build:
      context: ./tool-service
      dockerfile: Dockerfile
    ports:
      - "8005:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka/
    depends_on:
      - discovery-service
      - config-service
    volumes:
      - ./tool-service:/app
    networks:
      - lumina-network

  integration-service:
    build:
      context: ./integration-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka/
      - INTEGRATION_SECRET_KEY=lumina-integration-secret-key
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/lumina
      - SPRING_DATASOURCE_USERNAME=lumina
      - SPRING_DATASOURCE_PASSWORD=lumina_password
    depends_on:
      - discovery-service
      - postgres
    volumes:
      - ./integration-service:/app
    networks:
      - lumina-network

  collaboration-service:
    build:
      context: ./collaboration-service
      dockerfile: Dockerfile
    ports:
      - "8086:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/lumina_collaboration
      - SPRING_DATASOURCE_USERNAME=lumina
      - SPRING_DATASOURCE_PASSWORD=lumina_password
    depends_on:
      - discovery-service
      - postgres
      - integration-service
    volumes:
      - ./collaboration-service:/app
    networks:
      - lumina-network

  # Supporting Services
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka/
    depends_on:
      - discovery-service
      - config-service
    volumes:
      - ./api-gateway:/app
    networks:
      - lumina-network

  discovery-service:
    build:
      context: ./discovery-service
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    volumes:
      - ./discovery-service:/app
    networks:
      - lumina-network

  config-service:
    build:
      context: ./config-service
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    volumes:
      - ./config-service:/app
      - ./config-repo:/config-repo
    networks:
      - lumina-network

  observability-service:
    build:
      context: ./observability-service
      dockerfile: Dockerfile
    ports:
      - "9411:9411"  # Zipkin
      - "3000:3000"  # Grafana
      - "9090:9090"  # Prometheus
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    volumes:
      - ./observability-service:/app
      - observability-data:/data
    networks:
      - lumina-network

  # Databases
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=lumina
      - POSTGRES_PASSWORD=lumina_password
      - POSTGRES_DB=lumina
      - POSTGRES_MULTIPLE_DATABASES=lumina,lumina_collaboration
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - lumina-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - lumina-network

  # Message Broker
  kafka:
    image: confluentinc/cp-kafka:7.0.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - lumina-network

volumes:
  postgres-data:
  redis-data:
  kafka-data:
  observability-data:

networks:
  lumina-network:
    driver: bridge
