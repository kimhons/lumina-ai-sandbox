global:
  resolve_timeout: 5m

route:
  group_by: ['alertname', 'job', 'severity']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 12h
  receiver: 'email-notifications'
  routes:
  - match:
      severity: critical
    receiver: 'slack-critical'
    continue: true
  - match:
      severity: warning
    receiver: 'slack-warnings'

receivers:
- name: 'email-notifications'
  email_configs:
  - to: 'alerts@lumina-ai.example.com'
    from: 'alertmanager@lumina-ai.example.com'
    smarthost: 'smtp.example.com:587'
    auth_username: '${SMTP_USERNAME}'
    auth_password: '${SMTP_PASSWORD}'
    require_tls: true

- name: 'slack-critical'
  slack_configs:
  - api_url: '${SLACK_WEBHOOK_URL}'
    channel: '#alerts-critical'
    title: '[CRITICAL] {{ .GroupLabels.alertname }}'
    text: "{{ range .Alerts }}*Alert:* {{ .Annotations.summary }}\n*Description:* {{ .Annotations.description }}\n*Severity:* {{ .Labels.severity }}\n*Service:* {{ .Labels.job }}\n{{ end }}"
    send_resolved: true

- name: 'slack-warnings'
  slack_configs:
  - api_url: '${SLACK_WEBHOOK_URL}'
    channel: '#alerts-warnings'
    title: '[WARNING] {{ .GroupLabels.alertname }}'
    text: "{{ range .Alerts }}*Alert:* {{ .Annotations.summary }}\n*Description:* {{ .Annotations.description }}\n*Severity:* {{ .Labels.severity }}\n*Service:* {{ .Labels.job }}\n{{ end }}"
    send_resolved: true

inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'job']
